package model.ERP.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Nov 07 12:48:27 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblItemL4Impl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ItemL4Id,
        ItemL3Id,
        Name,
        Ast,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        UomId,
        CompanyId,
        TaxDetailId,
        ItemL4Code,
        ExpDate,
        MaxOrderLevell,
        MinOrderLevel,
        ReOrderLevel,
        BarCode,
        Type,
        GlL4Id,
        ConsCa,
        TblOpenBlncInv,
        TblPblSuppItems,
        TblItemL3;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ITEML4ID = AttributesEnum.ItemL4Id.index();
    public static final int ITEML3ID = AttributesEnum.ItemL3Id.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int AST = AttributesEnum.Ast.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UOMID = AttributesEnum.UomId.index();
    public static final int COMPANYID = AttributesEnum.CompanyId.index();
    public static final int TAXDETAILID = AttributesEnum.TaxDetailId.index();
    public static final int ITEML4CODE = AttributesEnum.ItemL4Code.index();
    public static final int EXPDATE = AttributesEnum.ExpDate.index();
    public static final int MAXORDERLEVELL = AttributesEnum.MaxOrderLevell.index();
    public static final int MINORDERLEVEL = AttributesEnum.MinOrderLevel.index();
    public static final int REORDERLEVEL = AttributesEnum.ReOrderLevel.index();
    public static final int BARCODE = AttributesEnum.BarCode.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int GLL4ID = AttributesEnum.GlL4Id.index();
    public static final int CONSCA = AttributesEnum.ConsCa.index();
    public static final int TBLOPENBLNCINV = AttributesEnum.TblOpenBlncInv.index();
    public static final int TBLPBLSUPPITEMS = AttributesEnum.TblPblSuppItems.index();
    public static final int TBLITEML3 = AttributesEnum.TblItemL3.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblItemL4Impl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.ERP.EO.TblItemL4");
    }


    /**
     * Gets the attribute value for ItemL4Id, using the alias name ItemL4Id.
     * @return the value of ItemL4Id
     */
    public BigDecimal getItemL4Id() {
        return (BigDecimal) getAttributeInternal(ITEML4ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemL4Id.
     * @param value value to set the ItemL4Id
     */
    public void setItemL4Id(BigDecimal value) {
        setAttributeInternal(ITEML4ID, value);
    }

    /**
     * Gets the attribute value for ItemL3Id, using the alias name ItemL3Id.
     * @return the value of ItemL3Id
     */
    public BigDecimal getItemL3Id() {
        return (BigDecimal) getAttributeInternal(ITEML3ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemL3Id.
     * @param value value to set the ItemL3Id
     */
    public void setItemL3Id(BigDecimal value) {
        setAttributeInternal(ITEML3ID, value);
    }

    /**
     * Gets the attribute value for Name, using the alias name Name.
     * @return the value of Name
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Name.
     * @param value value to set the Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for Ast, using the alias name Ast.
     * @return the value of Ast
     */
    public String getAst() {
        return (String) getAttributeInternal(AST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ast.
     * @param value value to set the Ast
     */
    public void setAst(String value) {
        setAttributeInternal(AST, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UomId, using the alias name UomId.
     * @return the value of UomId
     */
    public BigDecimal getUomId() {
        return (BigDecimal) getAttributeInternal(UOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomId.
     * @param value value to set the UomId
     */
    public void setUomId(BigDecimal value) {
        setAttributeInternal(UOMID, value);
    }

    /**
     * Gets the attribute value for CompanyId, using the alias name CompanyId.
     * @return the value of CompanyId
     */
    public BigDecimal getCompanyId() {
        return (BigDecimal) getAttributeInternal(COMPANYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyId.
     * @param value value to set the CompanyId
     */
    public void setCompanyId(BigDecimal value) {
        setAttributeInternal(COMPANYID, value);
    }

    /**
     * Gets the attribute value for TaxDetailId, using the alias name TaxDetailId.
     * @return the value of TaxDetailId
     */
    public BigDecimal getTaxDetailId() {
        return (BigDecimal) getAttributeInternal(TAXDETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxDetailId.
     * @param value value to set the TaxDetailId
     */
    public void setTaxDetailId(BigDecimal value) {
        setAttributeInternal(TAXDETAILID, value);
    }

    /**
     * Gets the attribute value for ItemL4Code, using the alias name ItemL4Code.
     * @return the value of ItemL4Code
     */
    public String getItemL4Code() {
        return (String) getAttributeInternal(ITEML4CODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemL4Code.
     * @param value value to set the ItemL4Code
     */
    public void setItemL4Code(String value) {
        setAttributeInternal(ITEML4CODE, value);
    }

    /**
     * Gets the attribute value for ExpDate, using the alias name ExpDate.
     * @return the value of ExpDate
     */
    public Timestamp getExpDate() {
        return (Timestamp) getAttributeInternal(EXPDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpDate.
     * @param value value to set the ExpDate
     */
    public void setExpDate(Timestamp value) {
        setAttributeInternal(EXPDATE, value);
    }

    /**
     * Gets the attribute value for MaxOrderLevell, using the alias name MaxOrderLevell.
     * @return the value of MaxOrderLevell
     */
    public BigDecimal getMaxOrderLevell() {
        return (BigDecimal) getAttributeInternal(MAXORDERLEVELL);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxOrderLevell.
     * @param value value to set the MaxOrderLevell
     */
    public void setMaxOrderLevell(BigDecimal value) {
        setAttributeInternal(MAXORDERLEVELL, value);
    }

    /**
     * Gets the attribute value for MinOrderLevel, using the alias name MinOrderLevel.
     * @return the value of MinOrderLevel
     */
    public BigDecimal getMinOrderLevel() {
        return (BigDecimal) getAttributeInternal(MINORDERLEVEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinOrderLevel.
     * @param value value to set the MinOrderLevel
     */
    public void setMinOrderLevel(BigDecimal value) {
        setAttributeInternal(MINORDERLEVEL, value);
    }

    /**
     * Gets the attribute value for ReOrderLevel, using the alias name ReOrderLevel.
     * @return the value of ReOrderLevel
     */
    public BigDecimal getReOrderLevel() {
        return (BigDecimal) getAttributeInternal(REORDERLEVEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReOrderLevel.
     * @param value value to set the ReOrderLevel
     */
    public void setReOrderLevel(BigDecimal value) {
        setAttributeInternal(REORDERLEVEL, value);
    }

    /**
     * Gets the attribute value for BarCode, using the alias name BarCode.
     * @return the value of BarCode
     */
    public String getBarCode() {
        return (String) getAttributeInternal(BARCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BarCode.
     * @param value value to set the BarCode
     */
    public void setBarCode(String value) {
        setAttributeInternal(BARCODE, value);
    }

    /**
     * Gets the attribute value for Type, using the alias name Type.
     * @return the value of Type
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Type.
     * @param value value to set the Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for GlL4Id, using the alias name GlL4Id.
     * @return the value of GlL4Id
     */
    public BigDecimal getGlL4Id() {
        return (BigDecimal) getAttributeInternal(GLL4ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlL4Id.
     * @param value value to set the GlL4Id
     */
    public void setGlL4Id(BigDecimal value) {
        setAttributeInternal(GLL4ID, value);
    }

    /**
     * Gets the attribute value for ConsCa, using the alias name ConsCa.
     * @return the value of ConsCa
     */
    public BigDecimal getConsCa() {
        return (BigDecimal) getAttributeInternal(CONSCA);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConsCa.
     * @param value value to set the ConsCa
     */
    public void setConsCa(BigDecimal value) {
        setAttributeInternal(CONSCA, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblOpenBlncInv() {
        return (RowIterator) getAttributeInternal(TBLOPENBLNCINV);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblPblSuppItems() {
        return (RowIterator) getAttributeInternal(TBLPBLSUPPITEMS);
    }

    /**
     * @return the associated entity TblItemL3Impl.
     */
    public TblItemL3Impl getTblItemL3() {
        return (TblItemL3Impl) getAttributeInternal(TBLITEML3);
    }

    /**
     * Sets <code>value</code> as the associated entity TblItemL3Impl.
     */
    public void setTblItemL3(TblItemL3Impl value) {
        setAttributeInternal(TBLITEML3, value);
    }


    /**
     * @param itemL4Id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal itemL4Id) {
        return new Key(new Object[] { itemL4Id });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
                        try {
                            loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessUMID"));
                        } catch(Exception ex) {
                            ex.printStackTrace();
                        }
                        
                        if (operation == DML_INSERT) {
                            setCreatedBy(loginId);
                            setUpdatedBy(loginId);
                            } else if(operation == DML_UPDATE) {
                            setUpdatedBy(loginId);
                        }
        super.doDML(operation, e);
    }
}

